version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: music_db
    environment:
      POSTGRES_DB: music_streaming
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - music_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: music_backend
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: music_streaming
      DB_USER: admin
      DB_PASSWORD: password123
      AWS_REGION: us-east-1
      AWS_S3_BUCKET: music-streaming-bucket
      JWT_SECRET: your-super-secret-jwt-key
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - music_network
    command: npm run dev
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`music.ats-victorycenter.org`) && PathPrefix(`/api`, `/health`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=3001"
      - "traefik.http.routers.backend.priority=100"

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: music_frontend
    environment:
      REACT_APP_API_URL: https://music.ats-victorycenter.org
      DANGEROUSLY_DISABLE_HOST_CHECK: "true"
      WDS_SOCKET_HOST: music.ats-victorycenter.org
      WDS_SOCKET_PORT: 443
      WDS_SOCKET_PATH: /ws
      WDS_SOCKET_PROTOCOL: wss
      HTTPS: "true"
      CHOKIDAR_USEPOLLING: "true"
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - music_network
    command: npm start
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`music.ats-victorycenter.org`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  # Traefik Reverse Proxy
  traefik:
    image: traefik:v2.10
    container_name: music_traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro
      - ./letsencrypt:/letsencrypt
    networks:
      - music_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-dashboard.rule=Host(`music.ats-victorycenter.org`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.traefik-dashboard.entrypoints=websecure"
      - "traefik.http.routers.traefik-dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.traefik-dashboard.service=api@internal"
      - "traefik.http.routers.traefik-dashboard.middlewares=dashboard-auth"
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=admin:$$apr1$$8EVjn/nj$$GiLUZqcbueTFeD23SuB6x0"  # admin/admin - CHANGE THIS!

volumes:
  postgres_data:

networks:
  music_network:
    driver: bridge